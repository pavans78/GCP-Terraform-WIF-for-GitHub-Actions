name: Create and/or Update GCP Infra

on:
  workflow_dispatch:

# We don't want parallel deployments.
concurrency: develop

jobs:

  # Job that will dynamically set github actions environment based on the branches.

  deploy:
    permissions:
      contents: read
      id-token: write

    name: Deployment
    environment: stage
    runs-on: ubuntu-latest

    steps:
      - name: Pull code into container 📋
        uses: actions/checkout@v2

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/887766566173/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "sa-github-actions@acquired-storm-428614-i2.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "acquired-storm-428614-i2"

      # Configuring the backend file using Github secrets depending upon the environment
      - name: Prepare environment 🔑
        working-directory: ./infra
        shell: sh
        run: |
          cat <<EOF > backend.cfg
          bucket = "tf-firm-shuttle-413014"
          prefix = "tfstate"
          EOF
      - name: Initialize terraform 🎬
        working-directory: ./infra
        shell: sh
        run: |
          terraform init 

      - name: Validate terraform files 🔍
        working-directory: ./infra
        shell: sh
        run: |
          terraform validate

      - name: Check format of terraform files 🔍
        working-directory: ./infra
        shell: sh
        run: |
          terraform fmt -check

      - name: Plan terraform changes 📝
        working-directory: ./infra
        shell: sh
        run: |
          terraform plan -var-file=_dev.tfvars -out=plans.tfplan

      - name: Apply terraform changes 🌳
        working-directory: ./infra
        shell: sh
        run: |
          terraform apply plans.tfplan 